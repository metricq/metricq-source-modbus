[metadata]
name = metricq_source_modbus
version = file: .version
author = TU Dresden
description = A modbus source for MetricQ
long_description = file: README.md
long_description_content_type = text/markdown
url = https://github.com/metricq/metricq-source-modbus
license = BSD 3-clause "New" or "Revised License"
license_file = LICENSE
classifiers =
    License :: OSI Approved :: BSD License
    Programming Language :: Python :: 3

[options]
packages =
    metricq_source_modbus
python_requires = >=3.10
install_requires =
    metricq[cli] ~= 5.4
    async-modbus >= 0.2.1
    python-hostlist
    pydantic
    click
    click-completion
    click_log
    uvloop

[options.package_data]
metricq_source_modbus = py.typed

[options.entry_points]
console_scripts =
    metricq-source-modbus=metricq_source_modbus:run

[options.extras_require]
test =
    pytest
lint =
    black ~= 23.1.0
    flake8
    isort ~= 5.0
typing =
    mypy >= 1.3.0
    mypy-protobuf
    %(test)s
dev =
    %(test)s
    %(lint)s
    %(typing)s
    tox

[flake8]
extend-exclude =
    build,
    .venv,
    venv
show-source = True
statistics = True
select =
    # Regular flake8 rules
    C, E, F, W
    # pep8-naming rules
    N
ignore =
    # E203: whitespace before ':' (not PEP8 compliant)
    E203
    # E501: line too long (black does that)
    E501
    # W503: line break before binary operator (not PEP8 compliant)
    W503

[tox:tox]
envlist =
    pytest
    black
    isort
    mypy
    flake8

[testenv:pytest]
deps = .[test]
commands = pytest

[testenv:black]
deps = .[lint]
commands = black --check .

[testenv:isort]
deps = .[lint]
commands = isort --diff --check .

[testenv:flake8]
deps = .[lint]
commands = flake8 .

[testenv:mypy]
deps = .[typing]
commands = mypy --strict metricq_source_modbus
